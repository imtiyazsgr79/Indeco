// Generated by view binder compiler. Do not edit!
package com.synergyyy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.camera.view.PreviewView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.synergyyy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEquipmentSearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CoordinatorLayout codinatorlayout;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final ImageView image;

  @NonNull
  public final PreviewView preview;

  @NonNull
  public final RecyclerView recyclerViewEquip;

  @NonNull
  public final TextView scanTv;

  @NonNull
  public final Toolbar toolbarEquipmentSearch;

  private ActivityEquipmentSearchBinding(@NonNull LinearLayout rootView,
      @NonNull CoordinatorLayout codinatorlayout, @NonNull FrameLayout container,
      @NonNull ImageView image, @NonNull PreviewView preview,
      @NonNull RecyclerView recyclerViewEquip, @NonNull TextView scanTv,
      @NonNull Toolbar toolbarEquipmentSearch) {
    this.rootView = rootView;
    this.codinatorlayout = codinatorlayout;
    this.container = container;
    this.image = image;
    this.preview = preview;
    this.recyclerViewEquip = recyclerViewEquip;
    this.scanTv = scanTv;
    this.toolbarEquipmentSearch = toolbarEquipmentSearch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEquipmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEquipmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_equipment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEquipmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.codinatorlayout;
      CoordinatorLayout codinatorlayout = rootView.findViewById(id);
      if (codinatorlayout == null) {
        break missingId;
      }

      id = R.id.container;
      FrameLayout container = rootView.findViewById(id);
      if (container == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.preview;
      PreviewView preview = rootView.findViewById(id);
      if (preview == null) {
        break missingId;
      }

      id = R.id.recycler_view_equip;
      RecyclerView recyclerViewEquip = rootView.findViewById(id);
      if (recyclerViewEquip == null) {
        break missingId;
      }

      id = R.id.scan_tv;
      TextView scanTv = rootView.findViewById(id);
      if (scanTv == null) {
        break missingId;
      }

      id = R.id.toolbar_equipmentSearch;
      Toolbar toolbarEquipmentSearch = rootView.findViewById(id);
      if (toolbarEquipmentSearch == null) {
        break missingId;
      }

      return new ActivityEquipmentSearchBinding((LinearLayout) rootView, codinatorlayout, container,
          image, preview, recyclerViewEquip, scanTv, toolbarEquipmentSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
