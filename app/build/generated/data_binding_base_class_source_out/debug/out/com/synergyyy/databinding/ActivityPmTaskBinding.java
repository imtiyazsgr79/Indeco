// Generated by view binder compiler. Do not edit!
package com.synergyyy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.synergyyy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPmTaskBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout ackTaskLL;

  @NonNull
  public final TextInputEditText acknowledgeByTask;

  @NonNull
  public final TextInputLayout acknowledgeByTaskTV;

  @NonNull
  public final Button buttonUpdateTaskPm;

  @NonNull
  public final FloatingActionButton checklistPmtask;

  @NonNull
  public final TextInputEditText datePickerPmtasksPm;

  @NonNull
  public final MaterialButton deleteButton;

  @NonNull
  public final AutoCompleteTextView fmmAutocompleteSpinnerXmlPm;

  @NonNull
  public final TextInputLayout fmmautopmtsklayout;

  @NonNull
  public final FloatingActionButton imagePmtaskafter;

  @NonNull
  public final FloatingActionButton imagePmtaskbefore;

  @NonNull
  public final LinearLayout layoutRemarksTasks;

  @NonNull
  public final FloatingActionButton morePmtask;

  @NonNull
  public final TextInputEditText namePmTasks;

  @NonNull
  public final MaterialButton plusButton;

  @NonNull
  public final TextInputEditText rankEDPmTask;

  @NonNull
  public final TextInputLayout rankTVPmTask;

  @NonNull
  public final TextView remarksTextViewTask;

  @NonNull
  public final ImageView signImagePmTask;

  @NonNull
  public final AutoCompleteTextView spinnerStatusPmtasks;

  @NonNull
  public final ImageView techSignIView;

  @NonNull
  public final TextView techSignTv;

  @NonNull
  public final TextInputEditText textViewBriefDescriptionPm;

  @NonNull
  public final TextInputEditText textViewBuildingNumberPm;

  @NonNull
  public final TextInputEditText textViewEquipmentPm;

  @NonNull
  public final TextInputEditText textViewLocationNumberPm;

  @NonNull
  public final TextInputEditText textViewScheduleDatePm;

  @NonNull
  public final TextInputEditText textViewScheduleNumberPm;

  @NonNull
  public final TextInputEditText textViewTaskNumberPm;

  @NonNull
  public final TextInputEditText timePickerPmtasks;

  @NonNull
  public final TextView tvSign;

  private ActivityPmTaskBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout ackTaskLL,
      @NonNull TextInputEditText acknowledgeByTask, @NonNull TextInputLayout acknowledgeByTaskTV,
      @NonNull Button buttonUpdateTaskPm, @NonNull FloatingActionButton checklistPmtask,
      @NonNull TextInputEditText datePickerPmtasksPm, @NonNull MaterialButton deleteButton,
      @NonNull AutoCompleteTextView fmmAutocompleteSpinnerXmlPm,
      @NonNull TextInputLayout fmmautopmtsklayout, @NonNull FloatingActionButton imagePmtaskafter,
      @NonNull FloatingActionButton imagePmtaskbefore, @NonNull LinearLayout layoutRemarksTasks,
      @NonNull FloatingActionButton morePmtask, @NonNull TextInputEditText namePmTasks,
      @NonNull MaterialButton plusButton, @NonNull TextInputEditText rankEDPmTask,
      @NonNull TextInputLayout rankTVPmTask, @NonNull TextView remarksTextViewTask,
      @NonNull ImageView signImagePmTask, @NonNull AutoCompleteTextView spinnerStatusPmtasks,
      @NonNull ImageView techSignIView, @NonNull TextView techSignTv,
      @NonNull TextInputEditText textViewBriefDescriptionPm,
      @NonNull TextInputEditText textViewBuildingNumberPm,
      @NonNull TextInputEditText textViewEquipmentPm,
      @NonNull TextInputEditText textViewLocationNumberPm,
      @NonNull TextInputEditText textViewScheduleDatePm,
      @NonNull TextInputEditText textViewScheduleNumberPm,
      @NonNull TextInputEditText textViewTaskNumberPm, @NonNull TextInputEditText timePickerPmtasks,
      @NonNull TextView tvSign) {
    this.rootView = rootView;
    this.ackTaskLL = ackTaskLL;
    this.acknowledgeByTask = acknowledgeByTask;
    this.acknowledgeByTaskTV = acknowledgeByTaskTV;
    this.buttonUpdateTaskPm = buttonUpdateTaskPm;
    this.checklistPmtask = checklistPmtask;
    this.datePickerPmtasksPm = datePickerPmtasksPm;
    this.deleteButton = deleteButton;
    this.fmmAutocompleteSpinnerXmlPm = fmmAutocompleteSpinnerXmlPm;
    this.fmmautopmtsklayout = fmmautopmtsklayout;
    this.imagePmtaskafter = imagePmtaskafter;
    this.imagePmtaskbefore = imagePmtaskbefore;
    this.layoutRemarksTasks = layoutRemarksTasks;
    this.morePmtask = morePmtask;
    this.namePmTasks = namePmTasks;
    this.plusButton = plusButton;
    this.rankEDPmTask = rankEDPmTask;
    this.rankTVPmTask = rankTVPmTask;
    this.remarksTextViewTask = remarksTextViewTask;
    this.signImagePmTask = signImagePmTask;
    this.spinnerStatusPmtasks = spinnerStatusPmtasks;
    this.techSignIView = techSignIView;
    this.techSignTv = techSignTv;
    this.textViewBriefDescriptionPm = textViewBriefDescriptionPm;
    this.textViewBuildingNumberPm = textViewBuildingNumberPm;
    this.textViewEquipmentPm = textViewEquipmentPm;
    this.textViewLocationNumberPm = textViewLocationNumberPm;
    this.textViewScheduleDatePm = textViewScheduleDatePm;
    this.textViewScheduleNumberPm = textViewScheduleNumberPm;
    this.textViewTaskNumberPm = textViewTaskNumberPm;
    this.timePickerPmtasks = timePickerPmtasks;
    this.tvSign = tvSign;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPmTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPmTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pm_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPmTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ackTaskLL;
      LinearLayout ackTaskLL = rootView.findViewById(id);
      if (ackTaskLL == null) {
        break missingId;
      }

      id = R.id.acknowledgeByTask;
      TextInputEditText acknowledgeByTask = rootView.findViewById(id);
      if (acknowledgeByTask == null) {
        break missingId;
      }

      id = R.id.acknowledgeByTaskTV;
      TextInputLayout acknowledgeByTaskTV = rootView.findViewById(id);
      if (acknowledgeByTaskTV == null) {
        break missingId;
      }

      id = R.id.buttonUpdateTaskPm;
      Button buttonUpdateTaskPm = rootView.findViewById(id);
      if (buttonUpdateTaskPm == null) {
        break missingId;
      }

      id = R.id.checklist_pmtask;
      FloatingActionButton checklistPmtask = rootView.findViewById(id);
      if (checklistPmtask == null) {
        break missingId;
      }

      id = R.id.date_picker_pmtasksPm;
      TextInputEditText datePickerPmtasksPm = rootView.findViewById(id);
      if (datePickerPmtasksPm == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      MaterialButton deleteButton = rootView.findViewById(id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.fmmAutocompleteSpinner_xml_pm;
      AutoCompleteTextView fmmAutocompleteSpinnerXmlPm = rootView.findViewById(id);
      if (fmmAutocompleteSpinnerXmlPm == null) {
        break missingId;
      }

      id = R.id.fmmautopmtsklayout;
      TextInputLayout fmmautopmtsklayout = rootView.findViewById(id);
      if (fmmautopmtsklayout == null) {
        break missingId;
      }

      id = R.id.image_pmtaskafter;
      FloatingActionButton imagePmtaskafter = rootView.findViewById(id);
      if (imagePmtaskafter == null) {
        break missingId;
      }

      id = R.id.image_pmtaskbefore;
      FloatingActionButton imagePmtaskbefore = rootView.findViewById(id);
      if (imagePmtaskbefore == null) {
        break missingId;
      }

      id = R.id.layout_remarksTasks;
      LinearLayout layoutRemarksTasks = rootView.findViewById(id);
      if (layoutRemarksTasks == null) {
        break missingId;
      }

      id = R.id.more_pmtask;
      FloatingActionButton morePmtask = rootView.findViewById(id);
      if (morePmtask == null) {
        break missingId;
      }

      id = R.id.namePmTasks;
      TextInputEditText namePmTasks = rootView.findViewById(id);
      if (namePmTasks == null) {
        break missingId;
      }

      id = R.id.plusButton;
      MaterialButton plusButton = rootView.findViewById(id);
      if (plusButton == null) {
        break missingId;
      }

      id = R.id.rankEDPmTask;
      TextInputEditText rankEDPmTask = rootView.findViewById(id);
      if (rankEDPmTask == null) {
        break missingId;
      }

      id = R.id.rankTVPmTask;
      TextInputLayout rankTVPmTask = rootView.findViewById(id);
      if (rankTVPmTask == null) {
        break missingId;
      }

      id = R.id.remarksTextViewTask;
      TextView remarksTextViewTask = rootView.findViewById(id);
      if (remarksTextViewTask == null) {
        break missingId;
      }

      id = R.id.signImagePmTask;
      ImageView signImagePmTask = rootView.findViewById(id);
      if (signImagePmTask == null) {
        break missingId;
      }

      id = R.id.spinner_status_pmtasks;
      AutoCompleteTextView spinnerStatusPmtasks = rootView.findViewById(id);
      if (spinnerStatusPmtasks == null) {
        break missingId;
      }

      id = R.id.techSignIView;
      ImageView techSignIView = rootView.findViewById(id);
      if (techSignIView == null) {
        break missingId;
      }

      id = R.id.techSignTv;
      TextView techSignTv = rootView.findViewById(id);
      if (techSignTv == null) {
        break missingId;
      }

      id = R.id.textViewBriefDescriptionPm;
      TextInputEditText textViewBriefDescriptionPm = rootView.findViewById(id);
      if (textViewBriefDescriptionPm == null) {
        break missingId;
      }

      id = R.id.textViewBuildingNumberPm;
      TextInputEditText textViewBuildingNumberPm = rootView.findViewById(id);
      if (textViewBuildingNumberPm == null) {
        break missingId;
      }

      id = R.id.textViewEquipmentPm;
      TextInputEditText textViewEquipmentPm = rootView.findViewById(id);
      if (textViewEquipmentPm == null) {
        break missingId;
      }

      id = R.id.textViewLocationNumberPm;
      TextInputEditText textViewLocationNumberPm = rootView.findViewById(id);
      if (textViewLocationNumberPm == null) {
        break missingId;
      }

      id = R.id.textViewScheduleDatePm;
      TextInputEditText textViewScheduleDatePm = rootView.findViewById(id);
      if (textViewScheduleDatePm == null) {
        break missingId;
      }

      id = R.id.textViewScheduleNumberPm;
      TextInputEditText textViewScheduleNumberPm = rootView.findViewById(id);
      if (textViewScheduleNumberPm == null) {
        break missingId;
      }

      id = R.id.textViewTaskNumberPm;
      TextInputEditText textViewTaskNumberPm = rootView.findViewById(id);
      if (textViewTaskNumberPm == null) {
        break missingId;
      }

      id = R.id.time_picker_pmtasks;
      TextInputEditText timePickerPmtasks = rootView.findViewById(id);
      if (timePickerPmtasks == null) {
        break missingId;
      }

      id = R.id.tv_sign;
      TextView tvSign = rootView.findViewById(id);
      if (tvSign == null) {
        break missingId;
      }

      return new ActivityPmTaskBinding((LinearLayout) rootView, ackTaskLL, acknowledgeByTask,
          acknowledgeByTaskTV, buttonUpdateTaskPm, checklistPmtask, datePickerPmtasksPm,
          deleteButton, fmmAutocompleteSpinnerXmlPm, fmmautopmtsklayout, imagePmtaskafter,
          imagePmtaskbefore, layoutRemarksTasks, morePmtask, namePmTasks, plusButton, rankEDPmTask,
          rankTVPmTask, remarksTextViewTask, signImagePmTask, spinnerStatusPmtasks, techSignIView,
          techSignTv, textViewBriefDescriptionPm, textViewBuildingNumberPm, textViewEquipmentPm,
          textViewLocationNumberPm, textViewScheduleDatePm, textViewScheduleNumberPm,
          textViewTaskNumberPm, timePickerPmtasks, tvSign);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
