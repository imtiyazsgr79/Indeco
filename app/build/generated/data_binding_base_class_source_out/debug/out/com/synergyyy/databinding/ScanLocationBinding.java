// Generated by view binder compiler. Do not edit!
package com.synergyyy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.budiyev.android.codescanner.CodeScannerView;
import com.synergyyy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ScanLocationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CodeScannerView qrBtn;

  @NonNull
  public final RecyclerView recyclerViewEquip;

  @NonNull
  public final TextView scanTv;

  @NonNull
  public final Toolbar toolbarEquipmentSearch;

  private ScanLocationBinding(@NonNull LinearLayout rootView, @NonNull CodeScannerView qrBtn,
      @NonNull RecyclerView recyclerViewEquip, @NonNull TextView scanTv,
      @NonNull Toolbar toolbarEquipmentSearch) {
    this.rootView = rootView;
    this.qrBtn = qrBtn;
    this.recyclerViewEquip = recyclerViewEquip;
    this.scanTv = scanTv;
    this.toolbarEquipmentSearch = toolbarEquipmentSearch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScanLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScanLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.scan_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScanLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.qr_btn;
      CodeScannerView qrBtn = rootView.findViewById(id);
      if (qrBtn == null) {
        break missingId;
      }

      id = R.id.recycler_view_equip;
      RecyclerView recyclerViewEquip = rootView.findViewById(id);
      if (recyclerViewEquip == null) {
        break missingId;
      }

      id = R.id.scan_tv;
      TextView scanTv = rootView.findViewById(id);
      if (scanTv == null) {
        break missingId;
      }

      id = R.id.toolbar_equipmentSearch;
      Toolbar toolbarEquipmentSearch = rootView.findViewById(id);
      if (toolbarEquipmentSearch == null) {
        break missingId;
      }

      return new ScanLocationBinding((LinearLayout) rootView, qrBtn, recyclerViewEquip, scanTv,
          toolbarEquipmentSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
