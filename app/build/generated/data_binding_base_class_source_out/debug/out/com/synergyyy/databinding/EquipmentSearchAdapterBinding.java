// Generated by view binder compiler. Do not edit!
package com.synergyyy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.synergyyy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EquipmentSearchAdapterBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView buildingRV;

  @NonNull
  public final LinearLayout constrainMain;

  @NonNull
  public final TextView equipNameSearch;

  @NonNull
  public final TextView locationRV;

  @NonNull
  public final TextView schduleDateRV;

  @NonNull
  public final TextView statusRV;

  @NonNull
  public final TextView taskIdRV;

  @NonNull
  public final TextView taskNumberRV;

  private EquipmentSearchAdapterBinding(@NonNull CardView rootView, @NonNull TextView buildingRV,
      @NonNull LinearLayout constrainMain, @NonNull TextView equipNameSearch,
      @NonNull TextView locationRV, @NonNull TextView schduleDateRV, @NonNull TextView statusRV,
      @NonNull TextView taskIdRV, @NonNull TextView taskNumberRV) {
    this.rootView = rootView;
    this.buildingRV = buildingRV;
    this.constrainMain = constrainMain;
    this.equipNameSearch = equipNameSearch;
    this.locationRV = locationRV;
    this.schduleDateRV = schduleDateRV;
    this.statusRV = statusRV;
    this.taskIdRV = taskIdRV;
    this.taskNumberRV = taskNumberRV;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static EquipmentSearchAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EquipmentSearchAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.equipment_search_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EquipmentSearchAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buildingRV;
      TextView buildingRV = rootView.findViewById(id);
      if (buildingRV == null) {
        break missingId;
      }

      id = R.id.constrain_main;
      LinearLayout constrainMain = rootView.findViewById(id);
      if (constrainMain == null) {
        break missingId;
      }

      id = R.id.equipNameSearch;
      TextView equipNameSearch = rootView.findViewById(id);
      if (equipNameSearch == null) {
        break missingId;
      }

      id = R.id.locationRV;
      TextView locationRV = rootView.findViewById(id);
      if (locationRV == null) {
        break missingId;
      }

      id = R.id.schduleDateRV;
      TextView schduleDateRV = rootView.findViewById(id);
      if (schduleDateRV == null) {
        break missingId;
      }

      id = R.id.statusRV;
      TextView statusRV = rootView.findViewById(id);
      if (statusRV == null) {
        break missingId;
      }

      id = R.id.taskIdRV;
      TextView taskIdRV = rootView.findViewById(id);
      if (taskIdRV == null) {
        break missingId;
      }

      id = R.id.taskNumberRV;
      TextView taskNumberRV = rootView.findViewById(id);
      if (taskNumberRV == null) {
        break missingId;
      }

      return new EquipmentSearchAdapterBinding((CardView) rootView, buildingRV, constrainMain,
          equipNameSearch, locationRV, schduleDateRV, statusRV, taskIdRV, taskNumberRV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
