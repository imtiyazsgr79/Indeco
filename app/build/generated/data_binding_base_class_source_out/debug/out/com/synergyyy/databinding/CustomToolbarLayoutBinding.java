// Generated by view binder compiler. Do not edit!
package com.synergyyy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import com.synergyyy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomToolbarLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardCountTv;

  @NonNull
  public final ImageView logoutIcon;

  @NonNull
  public final TextView messageCount;

  @NonNull
  public final ImageView messageIcon;

  @NonNull
  public final TextView toolbarTvName;

  private CustomToolbarLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardCountTv, @NonNull ImageView logoutIcon,
      @NonNull TextView messageCount, @NonNull ImageView messageIcon,
      @NonNull TextView toolbarTvName) {
    this.rootView = rootView;
    this.cardCountTv = cardCountTv;
    this.logoutIcon = logoutIcon;
    this.messageCount = messageCount;
    this.messageIcon = messageIcon;
    this.toolbarTvName = toolbarTvName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomToolbarLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomToolbarLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_toolbar_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomToolbarLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_count_tv;
      MaterialCardView cardCountTv = rootView.findViewById(id);
      if (cardCountTv == null) {
        break missingId;
      }

      id = R.id.logout_icon;
      ImageView logoutIcon = rootView.findViewById(id);
      if (logoutIcon == null) {
        break missingId;
      }

      id = R.id.message_count;
      TextView messageCount = rootView.findViewById(id);
      if (messageCount == null) {
        break missingId;
      }

      id = R.id.message_icon;
      ImageView messageIcon = rootView.findViewById(id);
      if (messageIcon == null) {
        break missingId;
      }

      id = R.id.toolbar_tv_name;
      TextView toolbarTvName = rootView.findViewById(id);
      if (toolbarTvName == null) {
        break missingId;
      }

      return new CustomToolbarLayoutBinding((ConstraintLayout) rootView, cardCountTv, logoutIcon,
          messageCount, messageIcon, toolbarTvName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
