// Generated by view binder compiler. Do not edit!
package com.synergyyy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.navigation.NavigationView;
import com.synergyyy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyBaseBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final LinearLayout baseLinear;

  @NonNull
  public final DrawerLayout drawer;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final Toolbar toolbarMybase;

  private ActivityMyBaseBinding(@NonNull DrawerLayout rootView, @NonNull LinearLayout baseLinear,
      @NonNull DrawerLayout drawer, @NonNull NavigationView navView,
      @NonNull Toolbar toolbarMybase) {
    this.rootView = rootView;
    this.baseLinear = baseLinear;
    this.drawer = drawer;
    this.navView = navView;
    this.toolbarMybase = toolbarMybase;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyBaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyBaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_base, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyBaseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.base_linear;
      LinearLayout baseLinear = rootView.findViewById(id);
      if (baseLinear == null) {
        break missingId;
      }

      DrawerLayout drawer = (DrawerLayout) rootView;

      id = R.id.navView;
      NavigationView navView = rootView.findViewById(id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.toolbar_mybase;
      Toolbar toolbarMybase = rootView.findViewById(id);
      if (toolbarMybase == null) {
        break missingId;
      }

      return new ActivityMyBaseBinding((DrawerLayout) rootView, baseLinear, drawer, navView,
          toolbarMybase);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
